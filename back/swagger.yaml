openapi: 3.0.0
info:
  title: DevFood API
  description: API para aplicação DevFood
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Servidor de desenvolvimento local
tags:
  - name: Usuários
    description: Operações relacionadas a usuários
  - name: Endereços
    description: Operações relacionadas a endereços
  - name: Login
    description: Operações relacionadas ao login
  - name: Email
    description: Operações relacionadas a envio de emails
  - name: Restaurantes
    description: Operações relacionadas a restaurantes
  - name: Produtos
    description: Operações relacionadas a produtos

paths:
  /user:
    post:
      tags:
        - Usuários
      summary: Cadastrar novo usuário
      description: Cria um novo usuário no sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - nome
                    - email
                    - telefone
                  properties:
                    nome:
                      type: string
                      example: "Nome Exemplo"
                    email:
                      type: string
                      format: email
                      example: "exemplo@email.com"
                    telefone:
                      type: string
                      example: "11948307497"
      responses:
        "201":
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "550e8400-e29b-41d4-a716-446655440000"
                      nome:
                        type: string
                        example: "Nome Exemplo"
                      email:
                        type: string
                        format: email
                        example: "exemplo@email.com"
                      telefone:
                        type: string
                        format: phone
                        example: "11948307497"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Ocorreu um erro ao processar seus dados!"
        "409":
          description: Usuário já existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Usuário já existe!"

  /users:
    get:
      tags:
        - Usuários
      summary: Listar todos os usuários
      description: Retorna uma lista de todos os usuários cadastrados
      responses:
        "200":
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: "550e8400-e29b-41d4-a716-446655440000"
                        nome:
                          type: string
                          example: "Nome Exemplo"
                        email:
                          type: string
                          format: email
                          example: "exemplo@email.com"
                        telefone:
                          type: string
                          format: phone
                          example: "11948307497"
        "500":
          description: Erro no servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Não foi possível conectar com o banco de dados!"

  /user/{id}:
    put:
      tags:
        - Usuários
      summary: Alterar dados de um usuário
      description: Atualiza os dados de um usuário específico
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    nome:
                      type: string
                      example: "Novo Nome"
                    email:
                      type: string
                      format: email
                      example: "novo@email.com"
                    senha:
                      type: string
                      example: "nova_senha"
                    telefone:
                      type: string
                      format: phone
                      example: "11948307497"
      responses:
        "200":
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "550e8400-e29b-41d4-a716-446655440000"
                      nome:
                        type: string
                        example: "Novo Nome"
                      email:
                        type: string
                        format: email
                        example: "novo@email.com"
                      telefone:
                        type: string
                        format: phone
                        example: "11948307497"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Ocorreu um erro ao processar seus dados!"
        "403":
          description: Alteração não permitida
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Este e-mail não pode ser alterado!"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Usuário não encontrado!"

    delete:
      tags:
        - Usuários
      summary: Deletar um usuário
      description: Remove um usuário do sistema
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Usuário deletado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Usuário deletado com sucesso"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Usuário não encontrado!"

  /endereco:
    post:
      tags:
        - Endereços
      summary: Cadastrar novo endereço
      description: Adiciona um novo endereço para um usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - id_usuario
                    - attributes
                  properties:
                    id_usuario:
                      type: string
                      format: uuid
                      example: "550e8400-e29b-41d4-a716-446655440000"
                    attributes:
                      type: object
                      required:
                        - logradouro
                        - bairro
                        - cidade
                        - estado
                        - pais
                        - numero
                        - tipo
                      properties:
                        logradouro:
                          type: string
                          example: "Rua Exemplo"
                        bairro:
                          type: string
                          example: "Bairro Exemplo"
                        cidade:
                          type: string
                          example: "Cidade Exemplo"
                        estado:
                          type: string
                          example: "UF"
                        pais:
                          type: string
                          example: "País Exemplo"
                        numero:
                          type: integer
                          example: 123
                        complemento:
                          type: string
                          example: "Apto 123"
                        tipo:
                          type: string
                          enum: ["casa", "trabalho", "outro"]
                          example: "casa"
      responses:
        "201":
          description: Endereço criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "450e8400-e29b-41d4-a716-446655440000"
                      id_usuario:
                        type: string
                        format: uuid
                        example: "550e8400-e29b-41d4-a716-446655440000"
                      attributes:
                        type: object
                        properties:
                          logradouro:
                            type: string
                            example: "Rua Exemplo"
                          bairro:
                            type: string
                            example: "Bairro Exemplo"
                          cidade:
                            type: string
                            example: "Cidade Exemplo"
                          estado:
                            type: string
                            example: "UF"
                          pais:
                            type: string
                            example: "País Exemplo"
                          numero:
                            type: integer
                            example: 123
                          complemento:
                            type: string
                            example: "Apto 123"
                          tipo:
                            type: string
                            example: "casa"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Tipo de endereço inválido! Escolha entre casa ou trabalho"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Usuário não encontrado!"
        "409":
          description: Tipo de endereço já existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Esse tipo de endereço já existe!"

  /user/{id}/enderecos:
    get:
      tags:
        - Endereços
      summary: Listar endereços de um usuário
      description: Retorna todos os endereços de um usuário específico
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Lista de endereços
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: "450e8400-e29b-41d4-a716-446655440000"
                        id_usuario:
                          type: string
                          format: uuid
                          example: "550e8400-e29b-41d4-a716-446655440000"
                        logradouro:
                          type: string
                          example: "Rua Exemplo"
                        bairro:
                          type: string
                          example: "Bairro Exemplo"
                        cidade:
                          type: string
                          example: "Cidade Exemplo"
                        estado:
                          type: string
                          example: "UF"
                        pais:
                          type: string
                          example: "País Exemplo"
                        numero:
                          type: integer
                          example: 123
                        complemento:
                          type: string
                          example: "Apto 123"
                        tipo:
                          type: string
                          example: "casa"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Usuário não encontrado!"

  /endereco/{id}:
    put:
      tags:
        - Endereços
      summary: Alterar um endereço
      description: Atualiza os dados de um endereço específico
      parameters:
        - name: id
          in: path
          required: true
          description: ID do endereço
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - id_usuario
                    - attributes
                  properties:
                    id_usuario:
                      type: string
                      format: uuid
                      example: "550e8400-e29b-41d4-a716-446655440000"
                    attributes:
                      type: object
                      properties:
                        logradouro:
                          type: string
                          example: "Nova Rua"
                        bairro:
                          type: string
                          example: "Novo Bairro"
                        cidade:
                          type: string
                          example: "Nova Cidade"
                        estado:
                          type: string
                          example: "NE"
                        pais:
                          type: string
                          example: "Novo País"
                        numero:
                          type: integer
                          example: 456
                        complemento:
                          type: string
                          example: "Bloco B"
                        tipo:
                          type: string
                          enum: ["casa", "trabalho", "outro"]
                          example: "trabalho"
      responses:
        "200":
          description: Endereço atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "450e8400-e29b-41d4-a716-446655440000"
                      id_usuario:
                        type: string
                        format: uuid
                        example: "550e8400-e29b-41d4-a716-446655440000"
                      attributes:
                        type: object
                        properties:
                          logradouro:
                            type: string
                            example: "Nova Rua"
                          bairro:
                            type: string
                            example: "Novo Bairro"
                          cidade:
                            type: string
                            example: "Nova Cidade"
                          estado:
                            type: string
                            example: "NE"
                          pais:
                            type: string
                            example: "Novo País"
                          numero:
                            type: integer
                            example: 456
                          complemento:
                            type: string
                            example: "Bloco B"
                          tipo:
                            type: string
                            example: "trabalho"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Tipo de endereço inválido! Escolha entre casa ou trabalho"
        "404":
          description: Endereço não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Endereço não encontrado!"
        "409":
          description: Tipo de endereço já existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Esse tipo de endereço já existe!"

    delete:
      tags:
        - Endereços
      summary: Deletar um endereço
      description: Remove um endereço do sistema
      parameters:
        - name: id
          in: path
          required: true
          description: ID do endereço
          schema:
            type: string
            format: uuid
        - name: idUser
          in: query
          required: true
          description: ID do usuário
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Endereço deletado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Endereço deletado com sucesso"
        "404":
          description: Endereço não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Endereço não encontrado!"

  /send-email:
    post:
      tags:
        - Email
      summary: Enviar email
      description: Envia um email para o endereço especificado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - email
                  properties:
                    email:
                      type: string
                      format: email
                      example: "destinatario@email.com"
      responses:
        "200":
          description: Email enviado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Email enviado com sucesso"
        "400":
          description: Email inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Email inválido"

  /login:
    post:
      tags:
        - Login
      summary: Realizar login
      description: Autentica um usuário no sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - email
                    - senha
                  properties:
                    email:
                      type: string
                      format: email
                      example: "usuario@email.com"
                    senha:
                      type: string
                      example: "senha123"
      responses:
        "200":
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            example: "550e8400-e29b-41d4-a716-446655440000"
                          nome:
                            type: string
                            example: "Nome Exemplo"
                          email:
                            type: string
                            format: email
                            example: "usuario@email.com"
        "401":
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string
                    example: "Senha incorreta!"
  /restaurantes:
    get:
      tags:
        - Restaurantes
      summary: Listar todos os restaurantes
      responses:
        "200":
          description: Lista de restaurantes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Restaurante"
    
  /restaurante:
    post:
      tags:
        - Restaurantes
      summary: Criar um novo restaurante
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    nome:
                      type: string
                    descricao:
                      type: string
                    email:
                      type: string
                      format: email
                    cnpj:
                      type: string
                    razao_social:
                      type: string
                    especialidade:
                      type: string
                    telefone:
                      type: string
                    horario_funcionamento:
                      type: string
                    banco:
                      type: string
                    agencia:
                      type: string
                    nro_conta:
                      type: string
                    tipo_conta:
                      type: string
                    endereco:
                      type: object
                      properties:
                        logradouro:
                          type: string
                        bairro:
                          type: string
                        cidade:
                          type: string
                        estado:
                          type: string
                        pais:
                          type: string
                        numero:
                          type: integer
                        complemento:
                          type: string
      responses:
        "201":
          description: Restaurante criado com sucesso
        "400":
          description: Requisição inválida
  /restaurante/{id}:
    get:
      tags:
        - Restaurantes
      summary: Obter restaurante por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID do restaurante
      responses:
        "200":
          description: Dados do restaurante
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurante"
        "404":
          description: Restaurante não encontrado

    delete:
      tags:
        - Restaurantes
      summary: Deletar restaurante por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Restaurante deletado com sucesso
        "404":
          description: Restaurante não encontrado

    put:
      tags:
        - Restaurantes
      summary: Atualizar dados do restaurante
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    agencia:
                      type: string
                    banco:
                      type: string
                    cnpj:
                      type: string
                    email:
                      type: string
                    especialidade:
                      type: string
                    horario_funcionamento:
                      type: string
                    nome:
                      type: string
                    descricao:
                      type: string
                    nro_conta:
                      type: string
                    razao_social:
                      type: string
                    telefone:
                      type: string
                    tipo_conta:
                      type: string
      responses:
        "200":
          description: Restaurante atualizado com sucesso
        "404":
          description: Restaurante não encontrado
  /restaurante/endereco/{id}:
    put:
      tags:
        - Restaurantes
      summary: Atualizar endereço do restaurante
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        logradouro:
                          type: string
                        bairro:
                          type: string
                        cidade:
                          type: string
                        estado:
                          type: string
                        pais:
                          type: string
                        numero:
                          type: integer
                        complemento:
                          type: string
                        tipo:
                          type: string
      responses:
        "200":
          description: Endereço atualizado com sucesso
        "404":
          description: Restaurante não encontrado
  /produto:
    post:
      tags:
        - Produtos
      summary: "Criar novo produto"
      description: "Adiciona um novo produto ao banco de dados."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    nome:
                      type: string
                    valor_unitario:
                      type: number
                      format: float
                    qtd_estoque:
                      type: integer
              required:
                - data
                - nome
                - valor_unitario
                - qtd_estoque
            example:
              data:
                nome: "Pizza de Mussarela"
                valor_unitario: 52.00
                qtd_estoque: 100
      responses:
        '201':
          description: "Produto criado com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      nome:
                        type: string
                      valor_unitario:
                        type: number
                        format: float
                      qtd_estoque:
                        type: integer
              example:
                message:
                  "Produto criado com sucesso!"
        '404':
          description: "Restaurante não encontrado"
          content:
            application/json:
              schema:
                type: object
              example:
                error_message: "Restaurante não encontrado!"
        '409':
          description: "Produto já existe"
          content:
            application/json:
              schema:
                type: object
              example:
                error_message: "Produto já existe!"

  /restaurante/{id}/produtos:
    get:
      tags:
        - Produtos
      summary: "Listar produtos por restaurante"
      description: "Retorna a lista de produtos de um restaurante específico."
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: string
          description: "ID do restaurante"
      responses:
        '200':
          description: "Lista de produtos do restaurante."
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      Type:
                        type: string
                        example: "Produto"
                      attributes:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            nome:
                              type: string
                            qtd_estoque:
                              type: integer
                            valor_unitario:
                              type: number
                              format: float
                      count:
                        type: integer
                        example: 4
              example:
                data:
                  Type: "Produto"
                  attributes:
                    - id: "3a969b87-bd48-4a99-9f0d-b7bc4b256a39"
                      nome: "Sashimi de Salmão"
                      qtd_estoque: 50
                      valor_unitario: 48.00
                    - id: "7b89bea4-f021-487c-94f0-cf644eb1081d"
                      nome: "Temaki Salmão"
                      qtd_estoque: 60
                      valor_unitario: 28.00
                    - id: "b9fab80b-6d82-41af-a1bc-5ad5107a5eb1"
                      nome: "Sushi Especial"
                      qtd_estoque: 80
                      valor_unitario: 45.00
                  count: 3
        '404':
          description: "Restaurante não encontrado"
          content:
            application/json:
              schema:
                type: object
              example:
                error_message: "Restaurante não encontrado!"

  /produto/{id}:
    put:
      tags:
        - Produtos
      summary: "Atualizar produto"
      description: "Atualiza os dados de um produto existente."
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: string
          description: "ID do produto"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    nome:
                      type: string
                    valor_unitario:
                      type: number
                      format: float
                    qtd_estoque:
                      type: integer
              required:
                - data
                - nome
                - valor_unitario
                - qtd_estoque
            example:
              data:
                nome: "Sushimi de Salmão - Atualizado"
                valor_unitario: 50.00
                qtd_estoque: 45
      responses:
        '200':
          description: "Produto alterado com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      nome:
                        type: string
                      valor_unitario:
                        type: number
                        format: float
                      qtd_estoque:
                        type: integer
              example:
                message:
                  Produto alterado com sucesso.
        '404':
          description: "Produto não encontrado"
          content:
            application/json:
              schema:
                type: object
              example:
                error_message: "Produto não encontrado!"
        '409':
          description: "Produto já existe"
          content:
            application/json:
              schema:
                type: object
              example:
                error_message: "Produto já existe!"

    delete:
      tags:
        - Produtos
      summary: "Excluir produto"
      description: "Deleta um produto existente."
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: string
          description: "ID do produto"
      responses:
        '200':
          description: "Produto deletado com sucesso."
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Produto deletado com sucesso."
        '404':
          description: "Produto não encontrado"
          content:
            application/json:
              schema:
                type: object
              example:
                error_message: "Produto não encontrado!"